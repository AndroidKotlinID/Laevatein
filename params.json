{"name":"Laevatein","tagline":"The library enables you to select photos over albums on the device, restrict selectable photo quality(by pixel count), and so on.","body":"# Laevatein\r\n\r\nPhoto image selection activity set library.\r\n\r\nThe library enables you to select photos over albums on the device, restrict selectable photo quality(by pixel count), and so on.\r\n\r\n## Usage\r\n\r\nCall photo image selection activity by the following code snipet.\r\n\r\n```java\r\npublic class SomeActivity extends Activity {\r\n  public static final int REQUEST_CODE_CHOOSE = 1;\r\n  @Override\r\n  protected void onCreate(Bundle savedInstanceState) {\r\n    super.onCreate(savedInstanceState);\r\n    setContentView(R.layout.activity_some);\r\n  }\r\n\r\n  @Override\r\n  protected void onActivityResult(int requestCode, int resultcode, Intent data) {\r\n    super.onActivityResult(requestCode, resultCode, data);\r\n    switch (requestCode) {\r\n    case REQUEST_CODE_CHOOSE:\r\n      if (resultCode == RESULT_OK) {\r\n        // Get result and proceed your work from here...\r\n        List<Uri> selected = Laevatein.obtainResult(data);\r\n      }\r\n      break;\r\n    default:\r\n      break;\r\n    }\r\n  }\r\n\r\n  public void onClickButton(View view) {\r\n    // call chooser on click button like this\r\n    Laevatein.from(this).choose(MimeType.of(MimeType.JPEG)).forResult(REQUEST_CODE_CHOOSE);\r\n  }\r\n}\r\n```\r\n\r\nAnd you'll get the selection result on `Activity#onActivityResult(int, int, Intent)`.\r\n\r\n## Features\r\n\r\nLaevatein provides some APIs to customize selector behaviour for your spec.\r\n\r\n### Selectable count limitation\r\n\r\nSet selectable count with `count(int, int)`.\r\nDefault is `0 <= count <= 1`.\r\n\r\n```java\r\nLaevatein.from(this)\r\n        .choose(MimeType.of(MimeType.JPEG))\r\n        .count(0, 10)  // minimum = 0, max = 10, so 0 <= count <= 10;\r\n        .forResult(REQUEST_CODE_CHOOSE);\r\n```\r\n\r\n### Selectable photo quality limitation\r\n\r\nSet selectable photo quality by pixel count with `quality(int, int)`.\r\nDefault is `0 <= pixels <= Integer.MAX_VALUE`.\r\n\r\n```java\r\nLaevatein.from(this)\r\n        .choose(MimeType.of(MimeType.JPEG))\r\n        .quality(30000, Integer.MAX_VALUE)  // minimum = 30000px, max = Integer.MAX_VALUEpx, so 30000px <= count <= Integer.MAX_VALUEpx;\r\n        .forResult(REQUEST_CODE_CHOOSE);\r\n```\r\n\r\n### Use custom cell layout\r\n\r\nSet your layout and ids for the image cell with `bindEachImageWith(int, int, int)`.\r\n\r\n```java\r\nLaevatein.from(this)\r\n        .choose(MimeType.of(MimeType.JPEG))\r\n        .bindEachImageWith(R.layout.my_cell, R.id.my_cell_image_view, R.id.my_cell_check_box)\r\n        .forResult(REQUEST_CODE_CHOOSE);\r\n```\r\n\r\n### Resume selection with previously selected photos\r\n\r\nSet defaultly selected URIs with `resume(List<Uri>)`.\r\n\r\n```java\r\nList<Uri> mSelectedList;\r\n\r\nLaevatein.from(this)\r\n        .choose(MimeType.of(MimeType.JPEG))\r\n        .resume(mSelectedList)\r\n        .forResult(REQUEST_CODE_CHOOSE);\r\n```\r\n\r\n## Sample App\r\n\r\nSample application is available [here](https://deploygate.com/distributions/b43dc74fc4025bbb8587f179f5b8464418cca559).\r\n[<img src=\"https://dply.me/orf0t9/button/large\" alt=\"Try it on your device via DeployGate\">](https://dply.me/orf0t9#install)\r\n\r\n## Download\r\n\r\nVia Gradle\r\n\r\n```groovy\r\nrepositories {\r\n    mavenCentral()\r\n    maven { url 'https://raw.github.com/nohana/Laevatein/master/repository/' }\r\n}\r\nandroid {\r\n    dependencies {\r\n        compile 'com.laevatein:Laevatein:1.0.0'\r\n    }\r\n}\r\n```\r\n\r\n## Acknowledgement\r\n\r\nThis library depends on the following libraries.\r\n\r\n1. [Picasso](https://github.com/square/picasso) by Square Inc.\r\n2. [ImageViewZoom](https://github.com/sephiroth74/ImageViewZoom) by Alessandro Crugnola\r\n3. [Amalgam](https://github.com/nohana/Amalgam) by nohana, Inc.\r\n4. [CompoundContainers](https://github.com/KeithYokoma/CompoundContainers) by KeithYokoma\r\n\r\n## License\r\n\r\nThis library is licensed under Apache License v2.\r\n\r\n```\r\nCopyright (C) 2014 nohana, Inc. All rights reserved.\r\n\r\nLicensed under the Apache License, Version 2.0 (the \"License\"); you may not use\r\nthis file except in compliance with the License. You may obtain a copy of the\r\nLicense at\r\n\r\n    http://www.apache.org/licenses/LICENSE-2.0\r\n\r\nUnless required by applicable law or agreed to in writing, software distributed\r\nunder the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR\r\nCONDITIONS OF ANY KIND, either express or implied. See the License for the\r\nspecific language governing permissions and limitations under the License.\r\n```\r\n","google":"","note":"Don't delete this file! It's used internally to help with page regeneration."}